@0x00   0x00 // read value zero, and store to A, initialize
@0x01   0x06 // address of zero
@0x02   0x02 // write zero to j
@0x03   0x0A // address of j
@0x04   0x00 // read value 0, and store to A
@0x05   0x06 // address of zero
@0x06   0x02 // write 0 to counter
@0x07   0x07 // address of counter

@0x08   0x00 // read value j, and store to A
@0x09   0x0A // address of j
@0x0A   0x0B // dereference A 
@0x0B   0x02 //  write IRT 
@0x0C   0x90 // address of IRtransmitter

@0x0D   0x00 // read value zero, and store to A
@0x0E   0x06 // address of zero 
@0x0F   0x02 // write 0 to timer
@0x10   0xF2 // address of time reset
   
@0x11   0x01 // read value time_max 100, and store to B
@0x12   0x09 // address of time_max 100
@0x13   0x00 // read value time and store to A
@0x14   0xF0 // address of timer
@0x15   0xB6 // if timer<100 
@0x16   0x13 // go to read time again

@0x17   0x00 // else read value counter, and store to A
@0x18   0x07 // address of counter
@0x19   0x54 // counter=counter+1
@0x1A   0x02 // write counter
@0x1B   0x07 // address of counter
@0x1C   0x01 // read value counter_max and store to B
@0x1D   0x08 // address of counter_max
@0x1E   0xB6 // if counter<counter_max
@0x1F   0x0D // reset time

@0x20   0x00 //else read value j
@0x21   0x0A //address of j
@0x22   0x54 // j=j+1
@0x23   0x02 // write j
@0x24   0x0A //address of j
@0x25   0x01 // read value j_max store to B 
@0x26   0x0B // address j_max
@0x27   0xB6 // if j < j_max
@0x28   0x04 // go to next moving instruction


@0x29   0x00  // read value zero and store to A
@0x2A   0x06 // address of zero
@0x2B   0x02 // write 0 to interrupt disable
@0x2C   0xF3 // address of interrupt disable
@0x2D   0x08 // go to IDLE     